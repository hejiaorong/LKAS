/* This file contains stub implementations of the AUTOSAR RTE functions.
   The stub implementations can be used for testing the generated code in
   Simulink, for example, in SIL/PIL simulations of the component under
   test. Note that this file should be replaced with an appropriate RTE
   file when deploying the generated code outside of Simulink.

   This file is generated for:
   Atomic software component:  "LKAS"
   ARXML schema: "4.2"
   File generated on: "21-Aug-2020 16:34:07"  */

#ifndef Rte_LKAS_h
#define Rte_LKAS_h
#include "Rte_Type.h"
#include "Compiler.h"

/* Data access functions */
#define Rte_Read_IMAPve_d_BCM_HazardLamp_IMAPve_d_BCM_HazardLamp Rte_Read_LKAS_IMAPve_d_BCM_HazardLamp_IMAPve_d_BCM_HazardLamp

Std_ReturnType Rte_Read_IMAPve_d_BCM_HazardLamp_IMAPve_d_BCM_HazardLamp(UInt16*
  u);

#define Rte_Read_IMAPve_d_BCM_Left_Light_IMAPve_d_BCM_Left_Light Rte_Read_LKAS_IMAPve_d_BCM_Left_Light_IMAPve_d_BCM_Left_Light

Std_ReturnType Rte_Read_IMAPve_d_BCM_Left_Light_IMAPve_d_BCM_Left_Light(UInt16*
  u);

#define Rte_Read_IMAPve_d_BCM_Right_Light_IMAPve_d_BCM_Right_Light Rte_Read_LKAS_IMAPve_d_BCM_Right_Light_IMAPve_d_BCM_Right_Light

Std_ReturnType Rte_Read_IMAPve_d_BCM_Right_Light_IMAPve_d_BCM_Right_Light(UInt16*
  u);

#define Rte_Read_IMAPve_d_Camera_Signal_Fault_IMAPve_d_Camera_Signal_Fault Rte_Read_LKAS_IMAPve_d_Camera_Signal_Fault_IMAPve_d_Camera_Signal_Fault

Std_ReturnType
  Rte_Read_IMAPve_d_Camera_Signal_Fault_IMAPve_d_Camera_Signal_Fault(UInt16* u);

#define Rte_Read_IMAPve_d_Camera_Status_IMAPve_d_Camera_Status Rte_Read_LKAS_IMAPve_d_Camera_Status_IMAPve_d_Camera_Status

Std_ReturnType Rte_Read_IMAPve_d_Camera_Status_IMAPve_d_Camera_Status(UInt16* u);

#define Rte_Read_IMAPve_d_ConsArea_IMAPve_d_ConsArea Rte_Read_LKAS_IMAPve_d_ConsArea_IMAPve_d_ConsArea

Std_ReturnType Rte_Read_IMAPve_d_ConsArea_IMAPve_d_ConsArea(UInt16* u);

#define Rte_Read_IMAPve_d_EPS_Error_State_IMAPve_d_EPS_Error_State Rte_Read_LKAS_IMAPve_d_EPS_Error_State_IMAPve_d_EPS_Error_State

Std_ReturnType Rte_Read_IMAPve_d_EPS_Error_State_IMAPve_d_EPS_Error_State(UInt16*
  u);

#define Rte_Read_IMAPve_d_EPS_LKA_State_IMAPve_d_EPS_LKA_State Rte_Read_LKAS_IMAPve_d_EPS_LKA_State_IMAPve_d_EPS_LKA_State

Std_ReturnType Rte_Read_IMAPve_d_EPS_LKA_State_IMAPve_d_EPS_LKA_State(UInt16* u);

#define Rte_Read_IMAPve_d_EPS_Steer_Hold_State_IMAPve_d_EPS_Steer_Hold_State Rte_Read_LKAS_IMAPve_d_EPS_Steer_Hold_State_IMAPve_d_EPS_Steer_Hold_State

Std_ReturnType
  Rte_Read_IMAPve_d_EPS_Steer_Hold_State_IMAPve_d_EPS_Steer_Hold_State(UInt16* u);

#define Rte_Read_IMAPve_d_EPS_TrqLim_State_IMAPve_d_EPS_TrqLim_State Rte_Read_LKAS_IMAPve_d_EPS_TrqLim_State_IMAPve_d_EPS_TrqLim_State

Std_ReturnType Rte_Read_IMAPve_d_EPS_TrqLim_State_IMAPve_d_EPS_TrqLim_State
  (UInt16* u);

#define Rte_Read_IMAPve_d_EPS_Trq_State_IMAPve_d_EPS_Trq_State Rte_Read_LKAS_IMAPve_d_EPS_Trq_State_IMAPve_d_EPS_Trq_State

Std_ReturnType Rte_Read_IMAPve_d_EPS_Trq_State_IMAPve_d_EPS_Trq_State(UInt16* u);

#define Rte_Read_IMAPve_d_ESC_LatAcc_Valid_IMAPve_d_ESC_LatAcc_Valid Rte_Read_LKAS_IMAPve_d_ESC_LatAcc_Valid_IMAPve_d_ESC_LatAcc_Valid

Std_ReturnType Rte_Read_IMAPve_d_ESC_LatAcc_Valid_IMAPve_d_ESC_LatAcc_Valid
  (UInt16* u);

#define Rte_Read_IMAPve_d_ESC_LonAcc_Valid_IMAPve_d_ESC_LonAcc_Valid Rte_Read_LKAS_IMAPve_d_ESC_LonAcc_Valid_IMAPve_d_ESC_LonAcc_Valid

Std_ReturnType Rte_Read_IMAPve_d_ESC_LonAcc_Valid_IMAPve_d_ESC_LonAcc_Valid
  (UInt16* u);

#define Rte_Read_IMAPve_d_ESC_VehSpd_Valid_IMAPve_d_ESC_VehSpd_Valid Rte_Read_LKAS_IMAPve_d_ESC_VehSpd_Valid_IMAPve_d_ESC_VehSpd_Valid

Std_ReturnType Rte_Read_IMAPve_d_ESC_VehSpd_Valid_IMAPve_d_ESC_VehSpd_Valid
  (UInt16* u);

#define Rte_Read_IMAPve_d_ESC_YawRate_Valid_IMAPve_d_ESC_YawRate_Valid Rte_Read_LKAS_IMAPve_d_ESC_YawRate_Valid_IMAPve_d_ESC_YawRate_Valid

Std_ReturnType Rte_Read_IMAPve_d_ESC_YawRate_Valid_IMAPve_d_ESC_YawRate_Valid
  (UInt16* u);

#define Rte_Read_IMAPve_d_Fusion_Status_IMAPve_d_Fusion_Status Rte_Read_LKAS_IMAPve_d_Fusion_Status_IMAPve_d_Fusion_Status

Std_ReturnType Rte_Read_IMAPve_d_Fusion_Status_IMAPve_d_Fusion_Status(UInt16* u);

#define Rte_Read_IMAPve_d_L0_LC_IMAPve_d_L0_LC Rte_Read_LKAS_IMAPve_d_L0_LC_IMAPve_d_L0_LC

Std_ReturnType Rte_Read_IMAPve_d_L0_LC_IMAPve_d_L0_LC(UInt16* u);

#define Rte_Read_IMAPve_d_L0_Q_IMAPve_d_L0_Q Rte_Read_LKAS_IMAPve_d_L0_Q_IMAPve_d_L0_Q

Std_ReturnType Rte_Read_IMAPve_d_L0_Q_IMAPve_d_L0_Q(UInt16* u);

#define Rte_Read_IMAPve_d_L0_Type_IMAPve_d_L0_Type Rte_Read_LKAS_IMAPve_d_L0_Type_IMAPve_d_L0_Type

Std_ReturnType Rte_Read_IMAPve_d_L0_Type_IMAPve_d_L0_Type(UInt16* u);

#define Rte_Read_IMAPve_d_L1_LC_IMAPve_d_L1_LC Rte_Read_LKAS_IMAPve_d_L1_LC_IMAPve_d_L1_LC

Std_ReturnType Rte_Read_IMAPve_d_L1_LC_IMAPve_d_L1_LC(UInt16* u);

#define Rte_Read_IMAPve_d_L1_Q_IMAPve_d_L1_Q Rte_Read_LKAS_IMAPve_d_L1_Q_IMAPve_d_L1_Q

Std_ReturnType Rte_Read_IMAPve_d_L1_Q_IMAPve_d_L1_Q(UInt16* u);

#define Rte_Read_IMAPve_d_L1_Type_IMAPve_d_L1_Type Rte_Read_LKAS_IMAPve_d_L1_Type_IMAPve_d_L1_Type

Std_ReturnType Rte_Read_IMAPve_d_L1_Type_IMAPve_d_L1_Type(UInt16* u);

#define Rte_Read_IMAPve_d_LDW_Warn_Mode_IMAPve_d_LDW_Warn_Mode Rte_Read_LKAS_IMAPve_d_LDW_Warn_Mode_IMAPve_d_LDW_Warn_Mode

Std_ReturnType Rte_Read_IMAPve_d_LDW_Warn_Mode_IMAPve_d_LDW_Warn_Mode(UInt16* u);

#define Rte_Read_IMAPve_d_LKA_Main_Switch_IMAPve_d_LKA_Main_Switch Rte_Read_LKAS_IMAPve_d_LKA_Main_Switch_IMAPve_d_LKA_Main_Switch

Std_ReturnType Rte_Read_IMAPve_d_LKA_Main_Switch_IMAPve_d_LKA_Main_Switch(UInt16*
  u);

#define Rte_Read_IMAPve_d_LKA_Mode_IMAPve_d_LKA_Mode Rte_Read_LKAS_IMAPve_d_LKA_Mode_IMAPve_d_LKA_Mode

Std_ReturnType Rte_Read_IMAPve_d_LKA_Mode_IMAPve_d_LKA_Mode(UInt16* u);

#define Rte_Read_IMAPve_d_Lane_Valid_IMAPve_d_Lane_Valid Rte_Read_LKAS_IMAPve_d_Lane_Valid_IMAPve_d_Lane_Valid

Std_ReturnType Rte_Read_IMAPve_d_Lane_Valid_IMAPve_d_Lane_Valid(UInt16* u);

#define Rte_Read_IMAPve_d_ORI_L0_LC_IMAPve_d_ORI_L0_LC Rte_Read_LKAS_IMAPve_d_ORI_L0_LC_IMAPve_d_ORI_L0_LC

Std_ReturnType Rte_Read_IMAPve_d_ORI_L0_LC_IMAPve_d_ORI_L0_LC(UInt16* u);

#define Rte_Read_IMAPve_d_ORI_L0_Q_IMAPve_d_ORI_L0_Q Rte_Read_LKAS_IMAPve_d_ORI_L0_Q_IMAPve_d_ORI_L0_Q

Std_ReturnType Rte_Read_IMAPve_d_ORI_L0_Q_IMAPve_d_ORI_L0_Q(UInt16* u);

#define Rte_Read_IMAPve_d_ORI_L0_Type_IMAPve_d_ORI_L0_Type Rte_Read_LKAS_IMAPve_d_ORI_L0_Type_IMAPve_d_ORI_L0_Type

Std_ReturnType Rte_Read_IMAPve_d_ORI_L0_Type_IMAPve_d_ORI_L0_Type(UInt16* u);

#define Rte_Read_IMAPve_d_ORI_L1_LC_IMAPve_d_ORI_L1_LC Rte_Read_LKAS_IMAPve_d_ORI_L1_LC_IMAPve_d_ORI_L1_LC

Std_ReturnType Rte_Read_IMAPve_d_ORI_L1_LC_IMAPve_d_ORI_L1_LC(UInt16* u);

#define Rte_Read_IMAPve_d_ORI_L1_Q_IMAPve_d_ORI_L1_Q Rte_Read_LKAS_IMAPve_d_ORI_L1_Q_IMAPve_d_ORI_L1_Q

Std_ReturnType Rte_Read_IMAPve_d_ORI_L1_Q_IMAPve_d_ORI_L1_Q(UInt16* u);

#define Rte_Read_IMAPve_d_ORI_L1_Type_IMAPve_d_ORI_L1_Type Rte_Read_LKAS_IMAPve_d_ORI_L1_Type_IMAPve_d_ORI_L1_Type

Std_ReturnType Rte_Read_IMAPve_d_ORI_L1_Type_IMAPve_d_ORI_L1_Type(UInt16* u);

#define Rte_Read_IMAPve_d_ORI_Lane_ConsArea_IMAPve_d_ORI_Lane_ConsArea Rte_Read_LKAS_IMAPve_d_ORI_Lane_ConsArea_IMAPve_d_ORI_Lane_ConsArea

Std_ReturnType Rte_Read_IMAPve_d_ORI_Lane_ConsArea_IMAPve_d_ORI_Lane_ConsArea
  (UInt16* u);

#define Rte_Read_IMAPve_d_ORI_Lane_RoadType_IMAPve_d_ORI_Lane_RoadType Rte_Read_LKAS_IMAPve_d_ORI_Lane_RoadType_IMAPve_d_ORI_Lane_RoadType

Std_ReturnType Rte_Read_IMAPve_d_ORI_Lane_RoadType_IMAPve_d_ORI_Lane_RoadType
  (UInt16* u);

#define Rte_Read_IMAPve_d_ORI_Lane_Valid_IMAPve_d_ORI_Lane_Valid Rte_Read_LKAS_IMAPve_d_ORI_Lane_Valid_IMAPve_d_ORI_Lane_Valid

Std_ReturnType Rte_Read_IMAPve_d_ORI_Lane_Valid_IMAPve_d_ORI_Lane_Valid(UInt16*
  u);

#define Rte_Read_IMAPve_d_ORI_R0_LC_IMAPve_d_ORI_R0_LC Rte_Read_LKAS_IMAPve_d_ORI_R0_LC_IMAPve_d_ORI_R0_LC

Std_ReturnType Rte_Read_IMAPve_d_ORI_R0_LC_IMAPve_d_ORI_R0_LC(UInt16* u);

#define Rte_Read_IMAPve_d_ORI_R0_LT_IMAPve_d_ORI_R0_LT Rte_Read_LKAS_IMAPve_d_ORI_R0_LT_IMAPve_d_ORI_R0_LT

Std_ReturnType Rte_Read_IMAPve_d_ORI_R0_LT_IMAPve_d_ORI_R0_LT(UInt16* u);

#define Rte_Read_IMAPve_d_ORI_R0_Q_IMAPve_d_ORI_R0_Q Rte_Read_LKAS_IMAPve_d_ORI_R0_Q_IMAPve_d_ORI_R0_Q

Std_ReturnType Rte_Read_IMAPve_d_ORI_R0_Q_IMAPve_d_ORI_R0_Q(UInt16* u);

#define Rte_Read_IMAPve_d_ORI_R1_LC_IMAPve_d_ORI_R1_LC Rte_Read_LKAS_IMAPve_d_ORI_R1_LC_IMAPve_d_ORI_R1_LC

Std_ReturnType Rte_Read_IMAPve_d_ORI_R1_LC_IMAPve_d_ORI_R1_LC(UInt16* u);

#define Rte_Read_IMAPve_d_ORI_R1_LT_IMAPve_d_ORI_R1_LT Rte_Read_LKAS_IMAPve_d_ORI_R1_LT_IMAPve_d_ORI_R1_LT

Std_ReturnType Rte_Read_IMAPve_d_ORI_R1_LT_IMAPve_d_ORI_R1_LT(UInt16* u);

#define Rte_Read_IMAPve_d_ORI_R1_Q_IMAPve_d_ORI_R1_Q Rte_Read_LKAS_IMAPve_d_ORI_R1_Q_IMAPve_d_ORI_R1_Q

Std_ReturnType Rte_Read_IMAPve_d_ORI_R1_Q_IMAPve_d_ORI_R1_Q(UInt16* u);

#define Rte_Read_IMAPve_d_R0_LC_IMAPve_d_R0_LC Rte_Read_LKAS_IMAPve_d_R0_LC_IMAPve_d_R0_LC

Std_ReturnType Rte_Read_IMAPve_d_R0_LC_IMAPve_d_R0_LC(UInt16* u);

#define Rte_Read_IMAPve_d_R0_Q_IMAPve_d_R0_Q Rte_Read_LKAS_IMAPve_d_R0_Q_IMAPve_d_R0_Q

Std_ReturnType Rte_Read_IMAPve_d_R0_Q_IMAPve_d_R0_Q(UInt16* u);

#define Rte_Read_IMAPve_d_R0_Type_IMAPve_d_R0_Type Rte_Read_LKAS_IMAPve_d_R0_Type_IMAPve_d_R0_Type

Std_ReturnType Rte_Read_IMAPve_d_R0_Type_IMAPve_d_R0_Type(UInt16* u);

#define Rte_Read_IMAPve_d_R1_LC_IMAPve_d_R1_LC Rte_Read_LKAS_IMAPve_d_R1_LC_IMAPve_d_R1_LC

Std_ReturnType Rte_Read_IMAPve_d_R1_LC_IMAPve_d_R1_LC(UInt16* u);

#define Rte_Read_IMAPve_d_R1_Q_IMAPve_d_R1_Q Rte_Read_LKAS_IMAPve_d_R1_Q_IMAPve_d_R1_Q

Std_ReturnType Rte_Read_IMAPve_d_R1_Q_IMAPve_d_R1_Q(UInt16* u);

#define Rte_Read_IMAPve_d_R1_Type_IMAPve_d_R1_Type Rte_Read_LKAS_IMAPve_d_R1_Type_IMAPve_d_R1_Type

Std_ReturnType Rte_Read_IMAPve_d_R1_Type_IMAPve_d_R1_Type(UInt16* u);

#define Rte_Read_IMAPve_d_Road_Type_IMAPve_d_Road_Type Rte_Read_LKAS_IMAPve_d_Road_Type_IMAPve_d_Road_Type

Std_ReturnType Rte_Read_IMAPve_d_Road_Type_IMAPve_d_Road_Type(UInt16* u);

#define Rte_Read_IMAPve_d_SAS_Clb_State_IMAPve_d_SAS_Clb_State Rte_Read_LKAS_IMAPve_d_SAS_Clb_State_IMAPve_d_SAS_Clb_State

Std_ReturnType Rte_Read_IMAPve_d_SAS_Clb_State_IMAPve_d_SAS_Clb_State(UInt16* u);

#define Rte_Read_IMAPve_d_SAS_Trim_State_IMAPve_d_SAS_Trim_State Rte_Read_LKAS_IMAPve_d_SAS_Trim_State_IMAPve_d_SAS_Trim_State

Std_ReturnType Rte_Read_IMAPve_d_SAS_Trim_State_IMAPve_d_SAS_Trim_State(UInt16*
  u);

#define Rte_Read_IMAPve_d_SWS_Failure_Status_IMAPve_d_SWS_Failure_Status Rte_Read_LKAS_IMAPve_d_SWS_Failure_Status_IMAPve_d_SWS_Failure_Status

Std_ReturnType Rte_Read_IMAPve_d_SWS_Failure_Status_IMAPve_d_SWS_Failure_Status
  (UInt16* u);

#define Rte_Read_IMAPve_d_SWS_Fault_Code_IMAPve_d_SWS_Fault_Code Rte_Read_LKAS_IMAPve_d_SWS_Fault_Code_IMAPve_d_SWS_Fault_Code

Std_ReturnType Rte_Read_IMAPve_d_SWS_Fault_Code_IMAPve_d_SWS_Fault_Code(UInt16*
  u);

#define Rte_Read_IMAPve_d_Sensor_Status_IMAPve_d_Sensor_Status Rte_Read_LKAS_IMAPve_d_Sensor_Status_IMAPve_d_Sensor_Status

Std_ReturnType Rte_Read_IMAPve_d_Sensor_Status_IMAPve_d_Sensor_Status(UInt16* u);

#define Rte_Read_IMAPve_d_TCU_Actual_Gear_IMAPve_d_TCU_Actual_Gear Rte_Read_LKAS_IMAPve_d_TCU_Actual_Gear_IMAPve_d_TCU_Actual_Gear

Std_ReturnType Rte_Read_IMAPve_d_TCU_Actual_Gear_IMAPve_d_TCU_Actual_Gear(UInt16*
  u);

#define Rte_Read_IMAPve_g_EMS_RealPedal_IMAPve_g_EMS_RealPedal Rte_Read_LKAS_IMAPve_g_EMS_RealPedal_IMAPve_g_EMS_RealPedal

Std_ReturnType Rte_Read_IMAPve_g_EMS_RealPedal_IMAPve_g_EMS_RealPedal
  (T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_EPS_LKA_Current_IMAPve_g_EPS_LKA_Current Rte_Read_LKAS_IMAPve_g_EPS_LKA_Current_IMAPve_g_EPS_LKA_Current

Std_ReturnType Rte_Read_IMAPve_g_EPS_LKA_Current_IMAPve_g_EPS_LKA_Current
  (T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_EPS_SW_Trq_IMAPve_g_EPS_SW_Trq Rte_Read_LKAS_IMAPve_g_EPS_SW_Trq_IMAPve_g_EPS_SW_Trq

Std_ReturnType Rte_Read_IMAPve_g_EPS_SW_Trq_IMAPve_g_EPS_SW_Trq(T_M_Nm_Float32*
  u);

#define Rte_Read_IMAPve_g_ESC_Brake_Press_IMAPve_g_ESC_Brake_Press Rte_Read_LKAS_IMAPve_g_ESC_Brake_Press_IMAPve_g_ESC_Brake_Press

Std_ReturnType Rte_Read_IMAPve_g_ESC_Brake_Press_IMAPve_g_ESC_Brake_Press
  (T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_ESC_LatAcc_IMAPve_g_ESC_LatAcc Rte_Read_LKAS_IMAPve_g_ESC_LatAcc_IMAPve_g_ESC_LatAcc

Std_ReturnType Rte_Read_IMAPve_g_ESC_LatAcc_IMAPve_g_ESC_LatAcc(T_M_Nm_Float32*
  u);

#define Rte_Read_IMAPve_g_ESC_LonAcc_IMAPve_g_ESC_LonAcc Rte_Read_LKAS_IMAPve_g_ESC_LonAcc_IMAPve_g_ESC_LonAcc

Std_ReturnType Rte_Read_IMAPve_g_ESC_LonAcc_IMAPve_g_ESC_LonAcc(T_M_Nm_Float32*
  u);

#define Rte_Read_IMAPve_g_ESC_UnYawRate_IMAPve_g_ESC_UnYawRate Rte_Read_LKAS_IMAPve_g_ESC_UnYawRate_IMAPve_g_ESC_UnYawRate

Std_ReturnType Rte_Read_IMAPve_g_ESC_UnYawRate_IMAPve_g_ESC_UnYawRate
  (T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_ESC_VehSpd_IMAPve_g_ESC_VehSpd Rte_Read_LKAS_IMAPve_g_ESC_VehSpd_IMAPve_g_ESC_VehSpd

Std_ReturnType Rte_Read_IMAPve_g_ESC_VehSpd_IMAPve_g_ESC_VehSpd(T_M_Nm_Float32*
  u);

#define Rte_Read_IMAPve_g_ESC_YawRate_IMAPve_g_ESC_YawRate Rte_Read_LKAS_IMAPve_g_ESC_YawRate_IMAPve_g_ESC_YawRate

Std_ReturnType Rte_Read_IMAPve_g_ESC_YawRate_IMAPve_g_ESC_YawRate(T_M_Nm_Float32*
  u);

#define Rte_Read_IMAPve_g_L0_C0_IMAPve_g_L0_C0 Rte_Read_LKAS_IMAPve_g_L0_C0_IMAPve_g_L0_C0

Std_ReturnType Rte_Read_IMAPve_g_L0_C0_IMAPve_g_L0_C0(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_L0_C1_IMAPve_g_L0_C1 Rte_Read_LKAS_IMAPve_g_L0_C1_IMAPve_g_L0_C1

Std_ReturnType Rte_Read_IMAPve_g_L0_C1_IMAPve_g_L0_C1(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_L0_C2_IMAPve_g_L0_C2 Rte_Read_LKAS_IMAPve_g_L0_C2_IMAPve_g_L0_C2

Std_ReturnType Rte_Read_IMAPve_g_L0_C2_IMAPve_g_L0_C2(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_L0_C3_IMAPve_g_L0_C3 Rte_Read_LKAS_IMAPve_g_L0_C3_IMAPve_g_L0_C3

Std_ReturnType Rte_Read_IMAPve_g_L0_C3_IMAPve_g_L0_C3(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_L0_Confidence_IMAPve_g_L0_Confidence Rte_Read_LKAS_IMAPve_g_L0_Confidence_IMAPve_g_L0_Confidence

Std_ReturnType Rte_Read_IMAPve_g_L0_Confidence_IMAPve_g_L0_Confidence
  (T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_L0_TLC_IMAPve_g_L0_TLC Rte_Read_LKAS_IMAPve_g_L0_TLC_IMAPve_g_L0_TLC

Std_ReturnType Rte_Read_IMAPve_g_L0_TLC_IMAPve_g_L0_TLC(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_L0_VR_IMAPve_g_L0_VR Rte_Read_LKAS_IMAPve_g_L0_VR_IMAPve_g_L0_VR

Std_ReturnType Rte_Read_IMAPve_g_L0_VR_IMAPve_g_L0_VR(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_L0_W_IMAPve_g_L0_W Rte_Read_LKAS_IMAPve_g_L0_W_IMAPve_g_L0_W

Std_ReturnType Rte_Read_IMAPve_g_L0_W_IMAPve_g_L0_W(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_L1_C0_IMAPve_g_L1_C0 Rte_Read_LKAS_IMAPve_g_L1_C0_IMAPve_g_L1_C0

Std_ReturnType Rte_Read_IMAPve_g_L1_C0_IMAPve_g_L1_C0(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_L1_C1_IMAPve_g_L1_C1 Rte_Read_LKAS_IMAPve_g_L1_C1_IMAPve_g_L1_C1

Std_ReturnType Rte_Read_IMAPve_g_L1_C1_IMAPve_g_L1_C1(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_L1_C2_IMAPve_g_L1_C2 Rte_Read_LKAS_IMAPve_g_L1_C2_IMAPve_g_L1_C2

Std_ReturnType Rte_Read_IMAPve_g_L1_C2_IMAPve_g_L1_C2(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_L1_C3_IMAPve_g_L1_C3 Rte_Read_LKAS_IMAPve_g_L1_C3_IMAPve_g_L1_C3

Std_ReturnType Rte_Read_IMAPve_g_L1_C3_IMAPve_g_L1_C3(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_L1_Confidence_IMAPve_g_L1_Confidence Rte_Read_LKAS_IMAPve_g_L1_Confidence_IMAPve_g_L1_Confidence

Std_ReturnType Rte_Read_IMAPve_g_L1_Confidence_IMAPve_g_L1_Confidence
  (T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_L1_TLC_IMAPve_g_L1_TLC Rte_Read_LKAS_IMAPve_g_L1_TLC_IMAPve_g_L1_TLC

Std_ReturnType Rte_Read_IMAPve_g_L1_TLC_IMAPve_g_L1_TLC(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_L1_VR_IMAPve_g_L1_VR Rte_Read_LKAS_IMAPve_g_L1_VR_IMAPve_g_L1_VR

Std_ReturnType Rte_Read_IMAPve_g_L1_VR_IMAPve_g_L1_VR(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_L1_W_IMAPve_g_L1_W Rte_Read_LKAS_IMAPve_g_L1_W_IMAPve_g_L1_W

Std_ReturnType Rte_Read_IMAPve_g_L1_W_IMAPve_g_L1_W(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_ORI_L0_C0_IMAPve_g_ORI_L0_C0 Rte_Read_LKAS_IMAPve_g_ORI_L0_C0_IMAPve_g_ORI_L0_C0

Std_ReturnType Rte_Read_IMAPve_g_ORI_L0_C0_IMAPve_g_ORI_L0_C0(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_ORI_L0_C1_IMAPve_g_ORI_L0_C1 Rte_Read_LKAS_IMAPve_g_ORI_L0_C1_IMAPve_g_ORI_L0_C1

Std_ReturnType Rte_Read_IMAPve_g_ORI_L0_C1_IMAPve_g_ORI_L0_C1(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_ORI_L0_C2_IMAPve_g_ORI_L0_C2 Rte_Read_LKAS_IMAPve_g_ORI_L0_C2_IMAPve_g_ORI_L0_C2

Std_ReturnType Rte_Read_IMAPve_g_ORI_L0_C2_IMAPve_g_ORI_L0_C2(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_ORI_L0_C3_IMAPve_g_ORI_L0_C3 Rte_Read_LKAS_IMAPve_g_ORI_L0_C3_IMAPve_g_ORI_L0_C3

Std_ReturnType Rte_Read_IMAPve_g_ORI_L0_C3_IMAPve_g_ORI_L0_C3(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_ORI_L0_TLC_IMAPve_g_ORI_L0_TLC Rte_Read_LKAS_IMAPve_g_ORI_L0_TLC_IMAPve_g_ORI_L0_TLC

Std_ReturnType Rte_Read_IMAPve_g_ORI_L0_TLC_IMAPve_g_ORI_L0_TLC(T_M_Nm_Float32*
  u);

#define Rte_Read_IMAPve_g_ORI_L0_VR_IMAPve_g_ORI_L0_VR Rte_Read_LKAS_IMAPve_g_ORI_L0_VR_IMAPve_g_ORI_L0_VR

Std_ReturnType Rte_Read_IMAPve_g_ORI_L0_VR_IMAPve_g_ORI_L0_VR(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_ORI_L0_W_IMAPve_g_ORI_L0_W Rte_Read_LKAS_IMAPve_g_ORI_L0_W_IMAPve_g_ORI_L0_W

Std_ReturnType Rte_Read_IMAPve_g_ORI_L0_W_IMAPve_g_ORI_L0_W(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_ORI_L1_C0_IMAPve_g_ORI_L1_C0 Rte_Read_LKAS_IMAPve_g_ORI_L1_C0_IMAPve_g_ORI_L1_C0

Std_ReturnType Rte_Read_IMAPve_g_ORI_L1_C0_IMAPve_g_ORI_L1_C0(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_ORI_L1_C1_IMAPve_g_ORI_L1_C1 Rte_Read_LKAS_IMAPve_g_ORI_L1_C1_IMAPve_g_ORI_L1_C1

Std_ReturnType Rte_Read_IMAPve_g_ORI_L1_C1_IMAPve_g_ORI_L1_C1(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_ORI_L1_C2_IMAPve_g_ORI_L1_C2 Rte_Read_LKAS_IMAPve_g_ORI_L1_C2_IMAPve_g_ORI_L1_C2

Std_ReturnType Rte_Read_IMAPve_g_ORI_L1_C2_IMAPve_g_ORI_L1_C2(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_ORI_L1_C3_IMAPve_g_ORI_L1_C3 Rte_Read_LKAS_IMAPve_g_ORI_L1_C3_IMAPve_g_ORI_L1_C3

Std_ReturnType Rte_Read_IMAPve_g_ORI_L1_C3_IMAPve_g_ORI_L1_C3(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_ORI_L1_TLC_IMAPve_g_ORI_L1_TLC Rte_Read_LKAS_IMAPve_g_ORI_L1_TLC_IMAPve_g_ORI_L1_TLC

Std_ReturnType Rte_Read_IMAPve_g_ORI_L1_TLC_IMAPve_g_ORI_L1_TLC(T_M_Nm_Float32*
  u);

#define Rte_Read_IMAPve_g_ORI_L1_VR_IMAPve_g_ORI_L1_VR Rte_Read_LKAS_IMAPve_g_ORI_L1_VR_IMAPve_g_ORI_L1_VR

Std_ReturnType Rte_Read_IMAPve_g_ORI_L1_VR_IMAPve_g_ORI_L1_VR(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_ORI_L1_W_IMAPve_g_ORI_L1_W Rte_Read_LKAS_IMAPve_g_ORI_L1_W_IMAPve_g_ORI_L1_W

Std_ReturnType Rte_Read_IMAPve_g_ORI_L1_W_IMAPve_g_ORI_L1_W(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_ORI_R0_C0_IMAPve_g_ORI_R0_C0 Rte_Read_LKAS_IMAPve_g_ORI_R0_C0_IMAPve_g_ORI_R0_C0

Std_ReturnType Rte_Read_IMAPve_g_ORI_R0_C0_IMAPve_g_ORI_R0_C0(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_ORI_R0_C1_IMAPve_g_ORI_R0_C1 Rte_Read_LKAS_IMAPve_g_ORI_R0_C1_IMAPve_g_ORI_R0_C1

Std_ReturnType Rte_Read_IMAPve_g_ORI_R0_C1_IMAPve_g_ORI_R0_C1(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_ORI_R0_C2_IMAPve_g_ORI_R0_C2 Rte_Read_LKAS_IMAPve_g_ORI_R0_C2_IMAPve_g_ORI_R0_C2

Std_ReturnType Rte_Read_IMAPve_g_ORI_R0_C2_IMAPve_g_ORI_R0_C2(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_ORI_R0_C3_IMAPve_g_ORI_R0_C3 Rte_Read_LKAS_IMAPve_g_ORI_R0_C3_IMAPve_g_ORI_R0_C3

Std_ReturnType Rte_Read_IMAPve_g_ORI_R0_C3_IMAPve_g_ORI_R0_C3(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_ORI_R0_TLC_IMAPve_g_ORI_R0_TLC Rte_Read_LKAS_IMAPve_g_ORI_R0_TLC_IMAPve_g_ORI_R0_TLC

Std_ReturnType Rte_Read_IMAPve_g_ORI_R0_TLC_IMAPve_g_ORI_R0_TLC(T_M_Nm_Float32*
  u);

#define Rte_Read_IMAPve_g_ORI_R0_VR_IMAPve_g_ORI_R0_VR Rte_Read_LKAS_IMAPve_g_ORI_R0_VR_IMAPve_g_ORI_R0_VR

Std_ReturnType Rte_Read_IMAPve_g_ORI_R0_VR_IMAPve_g_ORI_R0_VR(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_ORI_R0_W_IMAPve_g_ORI_R0_W Rte_Read_LKAS_IMAPve_g_ORI_R0_W_IMAPve_g_ORI_R0_W

Std_ReturnType Rte_Read_IMAPve_g_ORI_R0_W_IMAPve_g_ORI_R0_W(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_ORI_R1_C0_IMAPve_g_ORI_R1_C0 Rte_Read_LKAS_IMAPve_g_ORI_R1_C0_IMAPve_g_ORI_R1_C0

Std_ReturnType Rte_Read_IMAPve_g_ORI_R1_C0_IMAPve_g_ORI_R1_C0(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_ORI_R1_C1_IMAPve_g_ORI_R1_C1 Rte_Read_LKAS_IMAPve_g_ORI_R1_C1_IMAPve_g_ORI_R1_C1

Std_ReturnType Rte_Read_IMAPve_g_ORI_R1_C1_IMAPve_g_ORI_R1_C1(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_ORI_R1_C2_IMAPve_g_ORI_R1_C2 Rte_Read_LKAS_IMAPve_g_ORI_R1_C2_IMAPve_g_ORI_R1_C2

Std_ReturnType Rte_Read_IMAPve_g_ORI_R1_C2_IMAPve_g_ORI_R1_C2(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_ORI_R1_C3_IMAPve_g_ORI_R1_C3 Rte_Read_LKAS_IMAPve_g_ORI_R1_C3_IMAPve_g_ORI_R1_C3

Std_ReturnType Rte_Read_IMAPve_g_ORI_R1_C3_IMAPve_g_ORI_R1_C3(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_ORI_R1_TLC_IMAPve_g_ORI_R1_TLC Rte_Read_LKAS_IMAPve_g_ORI_R1_TLC_IMAPve_g_ORI_R1_TLC

Std_ReturnType Rte_Read_IMAPve_g_ORI_R1_TLC_IMAPve_g_ORI_R1_TLC(T_M_Nm_Float32*
  u);

#define Rte_Read_IMAPve_g_ORI_R1_VR_IMAPve_g_ORI_R1_VR Rte_Read_LKAS_IMAPve_g_ORI_R1_VR_IMAPve_g_ORI_R1_VR

Std_ReturnType Rte_Read_IMAPve_g_ORI_R1_VR_IMAPve_g_ORI_R1_VR(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_ORI_R1_W_IMAPve_g_ORI_R1_W Rte_Read_LKAS_IMAPve_g_ORI_R1_W_IMAPve_g_ORI_R1_W

Std_ReturnType Rte_Read_IMAPve_g_ORI_R1_W_IMAPve_g_ORI_R1_W(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_R0_C0_IMAPve_g_R0_C0 Rte_Read_LKAS_IMAPve_g_R0_C0_IMAPve_g_R0_C0

Std_ReturnType Rte_Read_IMAPve_g_R0_C0_IMAPve_g_R0_C0(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_R0_C1_IMAPve_g_R0_C1 Rte_Read_LKAS_IMAPve_g_R0_C1_IMAPve_g_R0_C1

Std_ReturnType Rte_Read_IMAPve_g_R0_C1_IMAPve_g_R0_C1(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_R0_C2_IMAPve_g_R0_C2 Rte_Read_LKAS_IMAPve_g_R0_C2_IMAPve_g_R0_C2

Std_ReturnType Rte_Read_IMAPve_g_R0_C2_IMAPve_g_R0_C2(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_R0_C3_IMAPve_g_R0_C3 Rte_Read_LKAS_IMAPve_g_R0_C3_IMAPve_g_R0_C3

Std_ReturnType Rte_Read_IMAPve_g_R0_C3_IMAPve_g_R0_C3(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_R0_Confidence_IMAPve_g_R0_Confidence Rte_Read_LKAS_IMAPve_g_R0_Confidence_IMAPve_g_R0_Confidence

Std_ReturnType Rte_Read_IMAPve_g_R0_Confidence_IMAPve_g_R0_Confidence
  (T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_R0_TLC_IMAPve_g_R0_TLC Rte_Read_LKAS_IMAPve_g_R0_TLC_IMAPve_g_R0_TLC

Std_ReturnType Rte_Read_IMAPve_g_R0_TLC_IMAPve_g_R0_TLC(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_R0_VR_IMAPve_g_R0_VR Rte_Read_LKAS_IMAPve_g_R0_VR_IMAPve_g_R0_VR

Std_ReturnType Rte_Read_IMAPve_g_R0_VR_IMAPve_g_R0_VR(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_R0_W_IMAPve_g_R0_W Rte_Read_LKAS_IMAPve_g_R0_W_IMAPve_g_R0_W

Std_ReturnType Rte_Read_IMAPve_g_R0_W_IMAPve_g_R0_W(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_R1_C0_IMAPve_g_R1_C0 Rte_Read_LKAS_IMAPve_g_R1_C0_IMAPve_g_R1_C0

Std_ReturnType Rte_Read_IMAPve_g_R1_C0_IMAPve_g_R1_C0(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_R1_C1_IMAPve_g_R1_C1 Rte_Read_LKAS_IMAPve_g_R1_C1_IMAPve_g_R1_C1

Std_ReturnType Rte_Read_IMAPve_g_R1_C1_IMAPve_g_R1_C1(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_R1_C2_IMAPve_g_R1_C2 Rte_Read_LKAS_IMAPve_g_R1_C2_IMAPve_g_R1_C2

Std_ReturnType Rte_Read_IMAPve_g_R1_C2_IMAPve_g_R1_C2(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_R1_C3_IMAPve_g_R1_C3 Rte_Read_LKAS_IMAPve_g_R1_C3_IMAPve_g_R1_C3

Std_ReturnType Rte_Read_IMAPve_g_R1_C3_IMAPve_g_R1_C3(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_R1_Confidence_IMAPve_g_R1_Confidence Rte_Read_LKAS_IMAPve_g_R1_Confidence_IMAPve_g_R1_Confidence

Std_ReturnType Rte_Read_IMAPve_g_R1_Confidence_IMAPve_g_R1_Confidence
  (T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_R1_TLC_IMAPve_g_R1_TLC Rte_Read_LKAS_IMAPve_g_R1_TLC_IMAPve_g_R1_TLC

Std_ReturnType Rte_Read_IMAPve_g_R1_TLC_IMAPve_g_R1_TLC(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_R1_VR_IMAPve_g_R1_VR Rte_Read_LKAS_IMAPve_g_R1_VR_IMAPve_g_R1_VR

Std_ReturnType Rte_Read_IMAPve_g_R1_VR_IMAPve_g_R1_VR(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_R1_W_IMAPve_g_R1_W Rte_Read_LKAS_IMAPve_g_R1_W_IMAPve_g_R1_W

Std_ReturnType Rte_Read_IMAPve_g_R1_W_IMAPve_g_R1_W(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_SW_Angle_IMAPve_g_SW_Angle Rte_Read_LKAS_IMAPve_g_SW_Angle_IMAPve_g_SW_Angle

Std_ReturnType Rte_Read_IMAPve_g_SW_Angle_IMAPve_g_SW_Angle(T_M_Nm_Float32* u);

#define Rte_Read_IMAPve_g_SW_Angle_Speed_IMAPve_g_SW_Angle_Speed Rte_Read_LKAS_IMAPve_g_SW_Angle_Speed_IMAPve_g_SW_Angle_Speed

Std_ReturnType Rte_Read_IMAPve_g_SW_Angle_Speed_IMAPve_g_SW_Angle_Speed
  (T_M_Nm_Float32* u);

#define Rte_Write_LKASve_y_Vehicle_Lane_Display_LKASve_y_Vehicle_Lane_Display Rte_Write_LKAS_LKASve_y_Vehicle_Lane_Display_LKASve_y_Vehicle_Lane_Display

Std_ReturnType
  Rte_Write_LKASve_y_Vehicle_Lane_Display_LKASve_y_Vehicle_Lane_Display(UInt8 u);

#define Rte_Invalidate_LKASve_y_Vehicle_Lane_Display_LKASve_y_Vehicle_Lane_Display Rte_Invalidate_LKAS_LKASve_y_Vehicle_Lane_Display_LKASve_y_Vehicle_Lane_Display

Std_ReturnType
  Rte_Invalidate_LKASve_y_Vehicle_Lane_Display_LKASve_y_Vehicle_Lane_Display
  (void);

#define Rte_Write_LKASve_y_LDW_Status_Display_LKASve_y_LDW_Status_Display Rte_Write_LKAS_LKASve_y_LDW_Status_Display_LKASve_y_LDW_Status_Display

Std_ReturnType Rte_Write_LKASve_y_LDW_Status_Display_LKASve_y_LDW_Status_Display
  (UInt8 u);

#define Rte_Invalidate_LKASve_y_LDW_Status_Display_LKASve_y_LDW_Status_Display Rte_Invalidate_LKAS_LKASve_y_LDW_Status_Display_LKASve_y_LDW_Status_Display

Std_ReturnType
  Rte_Invalidate_LKASve_y_LDW_Status_Display_LKASve_y_LDW_Status_Display(void);

#define Rte_Write_LKASve_y_LKA_Status_Display_LKASve_y_LKA_Status_Display Rte_Write_LKAS_LKASve_y_LKA_Status_Display_LKASve_y_LKA_Status_Display

Std_ReturnType Rte_Write_LKASve_y_LKA_Status_Display_LKASve_y_LKA_Status_Display
  (UInt8 u);

#define Rte_Invalidate_LKASve_y_LKA_Status_Display_LKASve_y_LKA_Status_Display Rte_Invalidate_LKAS_LKASve_y_LKA_Status_Display_LKASve_y_LKA_Status_Display

Std_ReturnType
  Rte_Invalidate_LKASve_y_LKA_Status_Display_LKASve_y_LKA_Status_Display(void);

#define Rte_Write_LKASve_y_LDW_Flag_LKASve_y_LDW_Flag Rte_Write_LKAS_LKASve_y_LDW_Flag_LKASve_y_LDW_Flag

Std_ReturnType Rte_Write_LKASve_y_LDW_Flag_LKASve_y_LDW_Flag(UInt8 u);

#define Rte_Invalidate_LKASve_y_LDW_Flag_LKASve_y_LDW_Flag Rte_Invalidate_LKAS_LKASve_y_LDW_Flag_LKASve_y_LDW_Flag

Std_ReturnType Rte_Invalidate_LKASve_y_LDW_Flag_LKASve_y_LDW_Flag(void);

#define Rte_Write_LKASve_y_Hands_Off_Warning_LKASve_y_Hands_Off_Warning Rte_Write_LKAS_LKASve_y_Hands_Off_Warning_LKASve_y_Hands_Off_Warning

Std_ReturnType Rte_Write_LKASve_y_Hands_Off_Warning_LKASve_y_Hands_Off_Warning
  (UInt8 u);

#define Rte_Invalidate_LKASve_y_Hands_Off_Warning_LKASve_y_Hands_Off_Warning Rte_Invalidate_LKAS_LKASve_y_Hands_Off_Warning_LKASve_y_Hands_Off_Warning

Std_ReturnType
  Rte_Invalidate_LKASve_y_Hands_Off_Warning_LKASve_y_Hands_Off_Warning(void);

#define Rte_Write_LKASve_y_LKA_Action_Indication_LKASve_y_LKA_Action_Indication Rte_Write_LKAS_LKASve_y_LKA_Action_Indication_LKASve_y_LKA_Action_Indication

Std_ReturnType
  Rte_Write_LKASve_y_LKA_Action_Indication_LKASve_y_LKA_Action_Indication(UInt8
  u);

#define Rte_Invalidate_LKASve_y_LKA_Action_Indication_LKASve_y_LKA_Action_Indication Rte_Invalidate_LKAS_LKASve_y_LKA_Action_Indication_LKASve_y_LKA_Action_Indication

Std_ReturnType
  Rte_Invalidate_LKASve_y_LKA_Action_Indication_LKASve_y_LKA_Action_Indication
  (void);

#define Rte_Write_LKASve_y_HMI_Popup_Status_LKASve_y_HMI_Popup_Status Rte_Write_LKAS_LKASve_y_HMI_Popup_Status_LKASve_y_HMI_Popup_Status

Std_ReturnType Rte_Write_LKASve_y_HMI_Popup_Status_LKASve_y_HMI_Popup_Status
  (UInt8 u);

#define Rte_Invalidate_LKASve_y_HMI_Popup_Status_LKASve_y_HMI_Popup_Status Rte_Invalidate_LKAS_LKASve_y_HMI_Popup_Status_LKASve_y_HMI_Popup_Status

Std_ReturnType
  Rte_Invalidate_LKASve_y_HMI_Popup_Status_LKASve_y_HMI_Popup_Status(void);

#define Rte_Write_LKASve_y_EPS_State_Control_LKASve_y_EPS_State_Control Rte_Write_LKAS_LKASve_y_EPS_State_Control_LKASve_y_EPS_State_Control

Std_ReturnType Rte_Write_LKASve_y_EPS_State_Control_LKASve_y_EPS_State_Control
  (UInt8 u);

#define Rte_Invalidate_LKASve_y_EPS_State_Control_LKASve_y_EPS_State_Control Rte_Invalidate_LKAS_LKASve_y_EPS_State_Control_LKASve_y_EPS_State_Control

Std_ReturnType
  Rte_Invalidate_LKASve_y_EPS_State_Control_LKASve_y_EPS_State_Control(void);

#define Rte_Write_LKASve_g_LKA_SWA_Control_LKASve_g_LKA_SWA_Control Rte_Write_LKAS_LKASve_g_LKA_SWA_Control_LKASve_g_LKA_SWA_Control

Std_ReturnType Rte_Write_LKASve_g_LKA_SWA_Control_LKASve_g_LKA_SWA_Control
  (T_M_Nm_Float32 u);

#define Rte_Invalidate_LKASve_g_LKA_SWA_Control_LKASve_g_LKA_SWA_Control Rte_Invalidate_LKAS_LKASve_g_LKA_SWA_Control_LKASve_g_LKA_SWA_Control

Std_ReturnType Rte_Invalidate_LKASve_g_LKA_SWA_Control_LKASve_g_LKA_SWA_Control
  (void);

#define Rte_Write_LKASve_g_EPS_Factor_Control_LKASve_g_EPS_Factor_Control Rte_Write_LKAS_LKASve_g_EPS_Factor_Control_LKASve_g_EPS_Factor_Control

Std_ReturnType Rte_Write_LKASve_g_EPS_Factor_Control_LKASve_g_EPS_Factor_Control
  (T_M_Nm_Float32 u);

#define Rte_Invalidate_LKASve_g_EPS_Factor_Control_LKASve_g_EPS_Factor_Control Rte_Invalidate_LKAS_LKASve_g_EPS_Factor_Control_LKASve_g_EPS_Factor_Control

Std_ReturnType
  Rte_Invalidate_LKASve_g_EPS_Factor_Control_LKASve_g_EPS_Factor_Control(void);

#define Rte_Write_LKASve_y_EPS_LKA_Control_LKASve_y_EPS_LKA_Control Rte_Write_LKAS_LKASve_y_EPS_LKA_Control_LKASve_y_EPS_LKA_Control

Std_ReturnType Rte_Write_LKASve_y_EPS_LKA_Control_LKASve_y_EPS_LKA_Control(UInt8
  u);

#define Rte_Invalidate_LKASve_y_EPS_LKA_Control_LKASve_y_EPS_LKA_Control Rte_Invalidate_LKAS_LKASve_y_EPS_LKA_Control_LKASve_y_EPS_LKA_Control

Std_ReturnType Rte_Invalidate_LKASve_y_EPS_LKA_Control_LKASve_y_EPS_LKA_Control
  (void);

/* Entry point functions */
extern FUNC(void, LKAS_CODE) Runnable_LKAS_Init(void);
extern FUNC(void, LKAS_CODE) Runnable_LKAS_Step(void);

#endif
